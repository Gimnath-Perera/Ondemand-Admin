{"version":3,"sources":["components/LogoSign/index.tsx","content/Login/Login.tsx","store/actions/auth.actions.ts","content/Login/index.tsx"],"names":["LogoWrapper","styled","Link","theme","palette","text","primary","Logo","to","src","style","width","FormHeaderContainer","Box","FormSubHeaderSection","Login","navigate","useNavigate","dispatch","useDispatch","isAuthenticated","useSelector","auth","isLoginError","common","error","loading","useEffect","handleOnSubmit","values","payload","type","USER_LOGIN","userLoginSchema","Yup","email","max","required","password","sx","backgroundColor","display","flexDirection","height","justifyContent","Container","maxWidth","initialValues","validationSchema","onSubmit","errors","handleBlur","handleChange","handleSubmit","touched","mb","Typography","color","variant","align","gutterBottom","letterSpacing","fontSize","lineHeight","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","value","FormHelperText","id","py","CircularProgress","Button","size","OverviewWrapper","Overview","alignItems"],"mappings":"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","file":"static/js/25.b878be60.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\n\nconst LogoWrapper = styled(Link)(\n  ({ theme }) => `\n        color: ${theme.palette.text.primary};\n        display: flex;\n        text-decoration: none;\n        justify-content: center;\n`\n);\n\nfunction Logo() {\n  return (\n    <LogoWrapper to=\"/overview\">\n      <img src={'/static/images/logo/bglogo.jpg'} style={{ width: '25%' }} />\n    </LogoWrapper>\n  );\n}\n\nexport default Logo;\n","import { useEffect } from 'react';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { userLogin } from '../../store/actions/auth.actions';\r\n\r\nconst FormHeaderContainer = styled(Box)(\r\n  ({ theme }) => `\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 30px;\r\n  `\r\n);\r\n\r\nconst FormSubHeaderSection = styled(Box)(\r\n  ({ theme }) => `\r\n      display: flex;\r\n      flex-direction: column;\r\n      row-gap: 10px;\r\n    `\r\n);\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuthenticated = useSelector(\r\n    ({ auth }: RootStateOrAny) => auth.isAuthenticated\r\n  );\r\n  const isLoginError = useSelector(\r\n    ({ common }: RootStateOrAny) => common.error\r\n  );\r\n  const loading = useSelector(({ common }: RootStateOrAny) => common.loading);\r\n\r\n  useEffect(() => {\r\n    isAuthenticated && navigate('/dashboards/overview');\r\n  }, [isAuthenticated]);\r\n\r\n  const handleOnSubmit = (values) => {\r\n    dispatch(userLogin(values));\r\n  };\r\n\r\n  const initialFormValues = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  const userLoginSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email('Must be a valid email')\r\n      .max(255)\r\n      .required('Email is required'),\r\n    password: Yup.string().max(255).required('Password is required')\r\n  });\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"sm\">\r\n        <Formik\r\n          initialValues={initialFormValues}\r\n          validationSchema={userLoginSchema}\r\n          onSubmit={(values) => {\r\n            handleOnSubmit(values);\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            touched,\r\n            values\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <FormHeaderContainer sx={{ mb: 3 }}>\r\n                <FormSubHeaderSection sx={{ mb: 3 }}>\r\n                  <Typography color=\"#252733\" variant=\"h2\" align=\"center\">\r\n                    Log in to Dashboard\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                    align=\"center\"\r\n                    sx={{\r\n                      letterSpacing: '0.3px',\r\n                      fontSize: '14px',\r\n                      lineHeight: '20px'\r\n                    }}\r\n                  >\r\n                    Enter your email and password below\r\n                  </Typography>\r\n                </FormSubHeaderSection>\r\n              </FormHeaderContainer>\r\n\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Email Address\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Password\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              {isLoginError && (\r\n                <FormHelperText error id=\"outlined-adornment-password\">\r\n                  Invalid credentials\r\n                </FormHelperText>\r\n              )}\r\n\r\n              <Box sx={{ py: 2, display: 'flex', justifyContent: 'center' }}>\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Log In\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\nexport default Login;\r\n","import { USER_LOGIN, CLEAR_REDUX_STORE } from '../../constants/common-constant';\r\n\r\nexport const userLogin = (payload) => ({\r\n  type: USER_LOGIN,\r\n  payload\r\n});\r\n\r\nexport const userLogout = () => {\r\n  return {\r\n    type: CLEAR_REDUX_STORE\r\n  };\r\n};\r\n","import { Box, Container } from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\n\nimport { styled } from '@mui/material/styles';\nimport Logo from 'src/components/LogoSign';\nimport Login from './Login';\n\nconst OverviewWrapper = styled(Box)(\n  () => `\n    overflow: auto;\n    flex: 1;\n    overflow-x: hidden;\n    align-items: center;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n`\n);\n\nfunction Overview() {\n  return (\n    <OverviewWrapper>\n      <Helmet>\n        <title>NHC Admin Login</title>\n      </Helmet>\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" justifyContent=\"center\" py={5} alignItems=\"center\">\n          <Logo />\n        </Box>\n        <Login />\n      </Container>\n    </OverviewWrapper>\n  );\n}\n\nexport default Overview;\n"],"sourceRoot":""}