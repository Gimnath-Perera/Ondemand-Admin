{"version":3,"sources":["../node_modules/@mui/material/FormControl/formControlClasses.js","../node_modules/@mui/material/FormControl/FormControl.js","../node_modules/@mui/icons-material/SearchTwoTone.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","content/pages/Status/Status404/index.tsx"],"names":["getFormControlUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlRoot","styled","name","overridesResolver","styles","ownerState","_extends","root","capitalize","margin","fullWidth","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginTop","marginBottom","width","FormControl","React","inProps","ref","props","useThemeProps","children","className","color","component","disabled","error","visuallyFocused","focused","hiddenLabel","required","size","variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","initialAdornedStart","forEach","child","isMuiElement","input","isAdornedStart","adornedStart","setAdornedStart","initialFilled","isFilled","filled","setFilled","focusedState","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","_jsx","FormControlContext","Provider","value","as","clsx","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCardUtilityClass","CardRoot","Paper","overflow","Card","raised","elevation","getInputAdornmentUtilityClass","inputAdornmentClasses","InputAdornmentRoot","disablePointerEvents","theme","height","maxHeight","alignItems","whiteSpace","palette","action","active","positionStart","marginRight","marginLeft","pointerEvents","InputAdornment","disableTypography","variantProp","muiFormControl","useFormControl","_jsxs","dangerouslySetInnerHTML","__html","Typography","MainContent","Box","OutlinedInputWrapper","OutlinedInput","colors","alpha","white","ButtonSearch","Button","spacing","Status404","maxWidth","textAlign","alt","src","sx","my","fontWeight","mb","mt","p","type","placeholder","endAdornment","startAdornment","href"],"mappings":"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","file":"static/js/23.ef40996c.chunk.js","sourcesContent":["import { generateUtilityClasses, generateUtilityClass } from '@mui/core';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);\nexport default formControlClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    size,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'SearchTwoTone');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import {\n  Box,\n  Card,\n  Typography,\n  Container,\n  Divider,\n  Button,\n  FormControl,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\n\nimport { styled } from '@mui/material/styles';\n\nconst MainContent = styled(Box)(\n  ({ theme }) => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    overflow: auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n);\n\nconst OutlinedInputWrapper = styled(OutlinedInput)(\n  ({ theme }) => `\n    background-color: ${theme.colors.alpha.white[100]};\n`\n);\n\nconst ButtonSearch = styled(Button)(\n  ({ theme }) => `\n    margin-right: -${theme.spacing(1)};\n`\n);\n\nfunction Status404() {\n\n  return (\n    <>\n      <Helmet>\n        <title>Status - 404</title>\n      </Helmet>\n      <MainContent>\n        <Container maxWidth=\"md\">\n          <Box textAlign=\"center\">\n            <img alt=\"404\" height={180} src=\"/static/images/status/404.svg\" />\n            <Typography variant=\"h2\" sx={{ my: 2 }}>\n              The page you were looking for doesn't exist.\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              color=\"text.secondary\"\n              fontWeight=\"normal\"\n              sx={{ mb: 4 }}\n            >\n              It's on us, we moved the content to a different page. The search below should help!\n            </Typography>\n          </Box>\n          <Container maxWidth=\"sm\">\n            <Card sx={{ textAlign: 'center', mt: 3, p: 4 }}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <OutlinedInputWrapper\n                  type=\"text\"\n                  placeholder=\"Search terms here...\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <ButtonSearch variant=\"contained\" size=\"small\">\n                        Search\n                      </ButtonSearch>\n                    </InputAdornment>\n                  }\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <SearchTwoToneIcon />\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n              <Divider sx={{ my: 4 }}>OR</Divider>\n              <Button href=\"/overview\" variant=\"outlined\">\n                Go to homepage\n              </Button>\n            </Card>\n          </Container>\n        </Container>\n      </MainContent>\n    </>\n  );\n}\n\nexport default Status404;\n"],"sourceRoot":""}